<?php
/**
 * capital - CompteInstitution.php
 * Create by ALCINDOR LOSTHELVEN
 * Created on: 9/3/2020
 */

namespace app\DefaultApp\Models;


use systeme\Model\Model;

class CompteInstitution extends Model
{
    protected $table="compte_institution";
    private $id, $id_institution, $sold,$no,$pin;

    /**
     * @return mixed
     */
    public function getNo()
    {
        return $this->no;
    }

    /**
     * @param mixed $no
     */
    public function setNo($no)
    {
        $this->no = $no;
    }

    /**
     * @return mixed
     */
    public function getPin()
    {
        return $this->pin;
    }

    /**
     * @param mixed $pin
     */
    public function setPin($pin)
    {
        $this->pin = $pin;
    }


    /**
     * @return mixed
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param mixed $id
     */
    public function setId($id)
    {
        $this->id = $id;
    }

    /**
     * @return mixed
     */
    public function getIdInstitution()
    {
        return $this->id_institution;
    }

    /**
     * @param mixed $id_institution
     */
    public function setIdInstitution($id_institution)
    {
        $this->id_institution = $id_institution;
    }

    /**
     * @return mixed
     */
    public function getSold()
    {
        return $this->sold;
    }

    /**
     * @param mixed $sold
     */
    public function setSold($sold)
    {
        $this->sold = $sold;
    }

    private function existe($id_institution)
    {
        $con = self::connection();
        $req = "SELECT *FROM compte_institution WHERE id_institution=:id_institution";
        $stmt = $con->prepare($req);
        $stmt->execute(array(
            ":id_institution" => $id_institution
        ));
        $res = $stmt->fetchAll(\PDO::FETCH_CLASS, __CLASS__);
        if (count($res) > 0) {
            return true;
        } else {
            return false;
        }
    }

    public function add()
    {
        if($this->existe($this->id_institution)){
            return "compte existe";
        }
        return parent::add(); // TODO: Change the autogenerated stub
    }

    public static function listerParInstitution($id_institution){
        $con = self::connection();
        $req = "SELECT *FROM compte_institution WHERE id_institution=:id_institution";
        $stmt = $con->prepare($req);
        $stmt->execute(array(
            ":id_institution" => $id_institution
        ));
        return $stmt->fetchAll(\PDO::FETCH_CLASS, __CLASS__);
    }

    private function getMontant($id_institution,$id_compte){
        $con = self::connection();
        $req = "select sold from compte_institution where id_institution='{$id_institution}' and id='{$id_compte}'";
        $rps = $con->query($req);
        $data = $rps->fetch();
        $sold = $data['sold'];
        return (float)$sold;
    }

    public function depot($id_institution,$id_compte,$montant){
        $montantActuel=$this->getMontant($id_institution,$id_compte);
        $montantActuel+=$montant;
        $con=self::connection();
        $req="update compte_institution set sold=:sold where id=:id and id_institution=:id_institution";
        $stmt=$con->prepare($req);
        if($stmt->execute(array(
            ":id"=>$id_compte,
            ":id_institution"=>$id_institution,
            ":sold"=>$montantActuel
        ))){
            return "ok";
        }else{
            return "no";
        }
    }

    public function retrait($id_institution,$id_compte,$montant){
        $montantActuel=$this->getMontant($id_institution,$id_compte);
        $montantActuel-=$montant;
        if($montantActuel<0){
            return "Fonds insufisant";
        }
        $con=self::connection();
        $req="update compte_institution set sold=:sold where id=:id and id_institution=:id_institution";
        $stmt=$con->prepare($req);
        if($stmt->execute(array(
            ":id"=>$id_compte,
            ":id_institution"=>$id_institution,
            ":sold"=>$montantActuel
        ))){
            return "ok";
        }else{
            return "no";
        }
    }

    public function transfert($id_client,$id_institution,$id_compte,$montant){
        $cClient=new CompteClient();
        $m=$this->retrait($id_institution,$id_compte,$montant);
        if($m==="ok"){
            $m=$cClient->depot($id_client,$montant);
            if($m!=="ok"){
                $this->depot($id_institution,$id_compte,$montant);
            }
        }
        echo $m;
    }
}